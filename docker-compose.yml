version: '3.8'

services:
  # Main web application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      # Database connection (uncomment and configure if using a database)
      # - DATABASE_URL=${DATABASE_URL}
      # - JWT_SECRET=${JWT_SECRET}
    # Uncomment if you need persistent storage
    # volumes:
    #   - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - app-network

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # SSL certificates (uncomment for HTTPS)
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - app-network

  # Database service (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB:-provento}
  #     - POSTGRES_USER=${POSTGRES_USER:-postgres}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - app-network

  # Redis cache (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

# Uncomment if using database
# volumes:
#   postgres_data:
